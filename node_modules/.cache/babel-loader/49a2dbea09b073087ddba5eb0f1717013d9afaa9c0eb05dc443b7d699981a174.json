{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ammar\\\\Documents\\\\app lockin\\\\src\\\\pages\\\\TimerPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './TimerPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MOTIVATION_TEXTS = [\"LOCK IN!\",\n// 100%\n\"STAY FOCUSED!\",\n// 90%\n\"KEEP PUSHING!\",\n// 80%\n\"YOU GOT THIS!\",\n// 70%\n\"STAY STRONG!\",\n// 60%\n\"HALFWAY THERE!\",\n// 50%\n\"KEEP GOING!\",\n// 40%\n\"DON'T GIVE UP!\",\n// 30%\n\"PUSH THROUGH!\",\n// 20%\n\"ALMOST THERE!\" // 10%\n];\nconst TimerPage = () => {\n  _s();\n  const [minutes, setMinutes] = useState(26);\n  const [seconds, setSeconds] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [motivationText, setMotivationText] = useState(MOTIVATION_TEXTS[0]);\n  const [progress, setProgress] = useState(0);\n  const [totalSeconds, setTotalSeconds] = useState(0);\n  const intervalRef = useRef();\n  const initialTimeRef = useRef({\n    minutes: 26,\n    seconds: 0\n  });\n  useEffect(() => {\n    if (isRunning && !isPaused) {\n      intervalRef.current = window.setInterval(() => {\n        setSeconds(prevSeconds => {\n          let newSeconds = prevSeconds;\n          let newMinutes = minutes;\n          if (prevSeconds === 0) {\n            if (minutes === 0) {\n              setIsRunning(false);\n              setIsPaused(false);\n              setProgress(100);\n              setMotivationText(MOTIVATION_TEXTS[9]);\n              return 0;\n            }\n            newSeconds = 59;\n            newMinutes = minutes - 1;\n            setMinutes(newMinutes);\n          } else {\n            newSeconds = prevSeconds - 1;\n          }\n\n          // Bereken percentage voor voortgangsbalk\n          const currentTotal = newMinutes * 60 + newSeconds;\n          const progressPercentage = Math.round(currentTotal / totalSeconds * 100);\n          setProgress(100 - progressPercentage); // Draai het percentage om\n\n          // Bereken percentage voor motivatie tekst\n          const timePercentage = progressPercentage;\n          const textIndex = 9 - Math.floor(timePercentage / 10);\n          setMotivationText(MOTIVATION_TEXTS[Math.min(textIndex, 9)]);\n          return newSeconds;\n        });\n      }, 1000);\n    }\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, isPaused, minutes, totalSeconds]);\n  const startTimer = () => {\n    setIsRunning(true);\n    setIsPaused(false);\n    initialTimeRef.current = {\n      minutes,\n      seconds\n    };\n    const total = minutes * 60 + seconds;\n    setTotalSeconds(total);\n    setProgress(0);\n    setMotivationText(MOTIVATION_TEXTS[0]);\n  };\n  const stopTimer = () => {\n    setIsRunning(false);\n    setIsPaused(false);\n    setMinutes(initialTimeRef.current.minutes);\n    setSeconds(initialTimeRef.current.seconds);\n    setProgress(0);\n    setMotivationText(MOTIVATION_TEXTS[0]);\n  };\n  const pauseTimer = () => {\n    setIsPaused(true);\n  };\n  const resumeTimer = () => {\n    setIsPaused(false);\n  };\n  const adjustDigit = (type, position, increment) => {\n    if (isRunning) return;\n    if (type === 'minutes') {\n      setMinutes(prev => {\n        const tens = Math.floor(prev / 10);\n        const ones = prev % 10;\n        if (position === 'tens') {\n          const newTens = increment ? (tens + 1) % 10 : (tens - 1 + 10) % 10;\n          return newTens * 10 + ones;\n        } else {\n          const newOnes = increment ? (ones + 1) % 10 : (ones - 1 + 10) % 10;\n          return tens * 10 + newOnes;\n        }\n      });\n    } else {\n      setSeconds(prev => {\n        const tens = Math.floor(prev / 10);\n        const ones = prev % 10;\n        if (position === 'tens') {\n          const newTens = increment ? (tens + 1) % 6 : (tens - 1 + 6) % 6;\n          return newTens * 10 + ones;\n        } else {\n          const newOnes = increment ? (ones + 1) % 10 : (ones - 1 + 10) % 10;\n          return tens * 10 + newOnes;\n        }\n      });\n    }\n  };\n  const formatNumber = num => {\n    return num.toString().padStart(2, '0').split('');\n  };\n  const renderDigit = (type, digit, position) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"digit-group\",\n    children: [!isRunning && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"arrow up\",\n      onClick: () => adjustDigit(type, position, true),\n      children: \"\\u25B2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"digit\",\n      children: digit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), !isRunning && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"arrow down\",\n      onClick: () => adjustDigit(type, position, false),\n      children: \"\\u25BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n  const minuteDigits = formatNumber(minutes);\n  const secondDigits = formatNumber(seconds);\n  const size = 380;\n  const strokeWidth = 6;\n  const radius = size / 2 - strokeWidth;\n  const circumference = 2 * Math.PI * radius;\n  const offset = progress / 100 * circumference;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"motivation-text\",\n      children: motivationText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-circle\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"progress-ring\",\n        width: size,\n        height: size,\n        viewBox: `0 0 ${size} ${size}`,\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"progress-ring-circle-bg\",\n          stroke: \"#00FF73\",\n          strokeWidth: strokeWidth,\n          fill: \"transparent\",\n          r: radius,\n          cx: size / 2,\n          cy: size / 2,\n          transform: \"rotate(-90 190 190)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"progress-ring-circle\",\n          stroke: \"#00FF73\",\n          strokeWidth: strokeWidth,\n          fill: \"transparent\",\n          r: radius,\n          cx: size / 2,\n          cy: size / 2,\n          transform: \"rotate(-90 190 190)\",\n          style: {\n            strokeDasharray: `${circumference} ${circumference}`,\n            strokeDashoffset: offset\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-group\",\n          children: [renderDigit('minutes', minuteDigits[0], 'tens'), renderDigit('minutes', minuteDigits[1], 'ones')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"separator\",\n          children: \":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-group\",\n          children: [renderDigit('seconds', secondDigits[0], 'tens'), renderDigit('seconds', secondDigits[1], 'ones')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: !isRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        onClick: startTimer,\n        children: \"START\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button\",\n          onClick: stopTimer,\n          children: \"STOP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button pause\",\n          onClick: isPaused ? resumeTimer : pauseTimer,\n          children: isPaused ? 'RESUME' : 'PAUSE'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(TimerPage, \"OgzKOzu2i/N1kzq6DcdGP+hHV8I=\");\n_c = TimerPage;\nexport default TimerPage;\nvar _c;\n$RefreshReg$(_c, \"TimerPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","MOTIVATION_TEXTS","TimerPage","_s","minutes","setMinutes","seconds","setSeconds","isRunning","setIsRunning","isPaused","setIsPaused","motivationText","setMotivationText","progress","setProgress","totalSeconds","setTotalSeconds","intervalRef","initialTimeRef","current","window","setInterval","prevSeconds","newSeconds","newMinutes","currentTotal","progressPercentage","Math","round","timePercentage","textIndex","floor","min","clearInterval","startTimer","total","stopTimer","pauseTimer","resumeTimer","adjustDigit","type","position","increment","prev","tens","ones","newTens","newOnes","formatNumber","num","toString","padStart","split","renderDigit","digit","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","minuteDigits","secondDigits","size","strokeWidth","radius","circumference","PI","offset","width","height","viewBox","stroke","fill","r","cx","cy","transform","style","strokeDasharray","strokeDashoffset","_c","$RefreshReg$"],"sources":["C:/Users/ammar/Documents/app lockin/src/pages/TimerPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './TimerPage.css';\n\nconst MOTIVATION_TEXTS = [\n  \"LOCK IN!\", // 100%\n  \"STAY FOCUSED!\", // 90%\n  \"KEEP PUSHING!\", // 80%\n  \"YOU GOT THIS!\", // 70%\n  \"STAY STRONG!\", // 60%\n  \"HALFWAY THERE!\", // 50%\n  \"KEEP GOING!\", // 40%\n  \"DON'T GIVE UP!\", // 30%\n  \"PUSH THROUGH!\", // 20%\n  \"ALMOST THERE!\" // 10%\n];\n\nconst TimerPage: React.FC = () => {\n  const [minutes, setMinutes] = useState(26);\n  const [seconds, setSeconds] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [motivationText, setMotivationText] = useState(MOTIVATION_TEXTS[0]);\n  const [progress, setProgress] = useState(0);\n  const [totalSeconds, setTotalSeconds] = useState(0);\n  \n  const intervalRef = useRef<number>();\n  const initialTimeRef = useRef({ minutes: 26, seconds: 0 });\n\n  useEffect(() => {\n    if (isRunning && !isPaused) {\n      intervalRef.current = window.setInterval(() => {\n        setSeconds(prevSeconds => {\n          let newSeconds = prevSeconds;\n          let newMinutes = minutes;\n\n          if (prevSeconds === 0) {\n            if (minutes === 0) {\n              setIsRunning(false);\n              setIsPaused(false);\n              setProgress(100);\n              setMotivationText(MOTIVATION_TEXTS[9]);\n              return 0;\n            }\n            newSeconds = 59;\n            newMinutes = minutes - 1;\n            setMinutes(newMinutes);\n          } else {\n            newSeconds = prevSeconds - 1;\n          }\n\n          // Bereken percentage voor voortgangsbalk\n          const currentTotal = (newMinutes * 60) + newSeconds;\n          const progressPercentage = Math.round((currentTotal / totalSeconds) * 100);\n          setProgress(100 - progressPercentage); // Draai het percentage om\n\n          // Bereken percentage voor motivatie tekst\n          const timePercentage = progressPercentage;\n          const textIndex = 9 - Math.floor(timePercentage / 10);\n          setMotivationText(MOTIVATION_TEXTS[Math.min(textIndex, 9)]);\n\n          return newSeconds;\n        });\n      }, 1000);\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, isPaused, minutes, totalSeconds]);\n\n  const startTimer = () => {\n    setIsRunning(true);\n    setIsPaused(false);\n    initialTimeRef.current = { minutes, seconds };\n    const total = (minutes * 60) + seconds;\n    setTotalSeconds(total);\n    setProgress(0);\n    setMotivationText(MOTIVATION_TEXTS[0]);\n  };\n\n  const stopTimer = () => {\n    setIsRunning(false);\n    setIsPaused(false);\n    setMinutes(initialTimeRef.current.minutes);\n    setSeconds(initialTimeRef.current.seconds);\n    setProgress(0);\n    setMotivationText(MOTIVATION_TEXTS[0]);\n  };\n\n  const pauseTimer = () => {\n    setIsPaused(true);\n  };\n\n  const resumeTimer = () => {\n    setIsPaused(false);\n  };\n\n  const adjustDigit = (type: 'minutes' | 'seconds', position: 'tens' | 'ones', increment: boolean) => {\n    if (isRunning) return;\n    \n    if (type === 'minutes') {\n      setMinutes(prev => {\n        const tens = Math.floor(prev / 10);\n        const ones = prev % 10;\n        \n        if (position === 'tens') {\n          const newTens = increment ? (tens + 1) % 10 : (tens - 1 + 10) % 10;\n          return newTens * 10 + ones;\n        } else {\n          const newOnes = increment ? (ones + 1) % 10 : (ones - 1 + 10) % 10;\n          return tens * 10 + newOnes;\n        }\n      });\n    } else {\n      setSeconds(prev => {\n        const tens = Math.floor(prev / 10);\n        const ones = prev % 10;\n        \n        if (position === 'tens') {\n          const newTens = increment ? (tens + 1) % 6 : (tens - 1 + 6) % 6;\n          return newTens * 10 + ones;\n        } else {\n          const newOnes = increment ? (ones + 1) % 10 : (ones - 1 + 10) % 10;\n          return tens * 10 + newOnes;\n        }\n      });\n    }\n  };\n\n  const formatNumber = (num: number): string[] => {\n    return num.toString().padStart(2, '0').split('');\n  };\n\n  const renderDigit = (type: 'minutes' | 'seconds', digit: string, position: 'tens' | 'ones') => (\n    <div className=\"digit-group\">\n      {!isRunning && (\n        <button className=\"arrow up\" onClick={() => adjustDigit(type, position, true)}>▲</button>\n      )}\n      <div className=\"digit\">{digit}</div>\n      {!isRunning && (\n        <button className=\"arrow down\" onClick={() => adjustDigit(type, position, false)}>▼</button>\n      )}\n    </div>\n  );\n\n  const minuteDigits = formatNumber(minutes);\n  const secondDigits = formatNumber(seconds);\n\n  const size = 380;\n  const strokeWidth = 6;\n  const radius = (size / 2) - strokeWidth;\n  const circumference = 2 * Math.PI * radius;\n  const offset = (progress / 100) * circumference;\n\n  return (\n    <div className=\"timer-container\">\n      <div className=\"motivation-text\">{motivationText}</div>\n      <div className=\"timer-circle\">\n        <svg className=\"progress-ring\" width={size} height={size} viewBox={`0 0 ${size} ${size}`}>\n          <circle\n            className=\"progress-ring-circle-bg\"\n            stroke=\"#00FF73\"\n            strokeWidth={strokeWidth}\n            fill=\"transparent\"\n            r={radius}\n            cx={size/2}\n            cy={size/2}\n            transform=\"rotate(-90 190 190)\"\n          />\n          <circle\n            className=\"progress-ring-circle\"\n            stroke=\"#00FF73\"\n            strokeWidth={strokeWidth}\n            fill=\"transparent\"\n            r={radius}\n            cx={size/2}\n            cy={size/2}\n            transform=\"rotate(-90 190 190)\"\n            style={{\n              strokeDasharray: `${circumference} ${circumference}`,\n              strokeDashoffset: offset\n            }}\n          />\n        </svg>\n        <div className=\"timer-display\">\n          <div className=\"time-group\">\n            {renderDigit('minutes', minuteDigits[0], 'tens')}\n            {renderDigit('minutes', minuteDigits[1], 'ones')}\n          </div>\n          <div className=\"separator\">:</div>\n          <div className=\"time-group\">\n            {renderDigit('seconds', secondDigits[0], 'tens')}\n            {renderDigit('seconds', secondDigits[1], 'ones')}\n          </div>\n        </div>\n      </div>\n      <div className=\"controls\">\n        {!isRunning ? (\n          <button className=\"control-button\" onClick={startTimer}>START</button>\n        ) : (\n          <>\n            <button className=\"control-button\" onClick={stopTimer}>STOP</button>\n            <button className=\"control-button pause\" onClick={isPaused ? resumeTimer : pauseTimer}>\n              {isPaused ? 'RESUME' : 'PAUSE'}\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TimerPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}