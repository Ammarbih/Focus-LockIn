{"ast":null,"code":"import React,{createContext,useState,useContext,useCallback,useEffect}from'react';import{useSettings}from'./SettingsContext';import{jsx as _jsx}from\"react/jsx-runtime\";const TimerContext=/*#__PURE__*/createContext(null);export const TimerProvider=_ref=>{let{children}=_ref;const{settings}=useSettings();const[timeLeft,setTimeLeft]=useState(settings.defaultFocusTime*60);const[isRunning,setIsRunning]=useState(false);const[isPaused,setIsPaused]=useState(false);const[initialTime,setInitialTime]=useState(settings.defaultFocusTime*60);const[lastSetTime,setLastSetTime]=useState(settings.defaultFocusTime*60);const[lastUpdate,setLastUpdate]=useState(null);useEffect(()=>{let requestId;const updateTimer=timestamp=>{if(!lastUpdate){setLastUpdate(timestamp);requestId=requestAnimationFrame(updateTimer);return;}const deltaTime=timestamp-lastUpdate;if(deltaTime>=1000){// Update every second\nsetTimeLeft(prev=>{if(prev<=0){setIsRunning(false);setIsPaused(false);setLastUpdate(null);return lastSetTime;}return prev-1;});setLastUpdate(timestamp);}if(isRunning&&!isPaused){requestId=requestAnimationFrame(updateTimer);}};if(isRunning&&!isPaused){requestId=requestAnimationFrame(updateTimer);}else{setLastUpdate(null);}return()=>{if(requestId){cancelAnimationFrame(requestId);}};},[isRunning,isPaused,lastSetTime]);const toggleTimer=useCallback(()=>{if(!isRunning){setTimeLeft(lastSetTime);setInitialTime(lastSetTime);setIsRunning(true);setIsPaused(false);}else{setIsRunning(false);setIsPaused(false);setTimeLeft(lastSetTime);setInitialTime(lastSetTime);}},[isRunning,lastSetTime]);const resetTimer=useCallback(()=>{setTimeLeft(lastSetTime);setInitialTime(lastSetTime);setIsRunning(false);setIsPaused(false);},[lastSetTime]);const adjustTime=useCallback(amount=>{if(!isRunning&&!isPaused){const newMinutes=Math.max(1,Math.min(120,Math.floor(timeLeft/60)+amount));const newSeconds=newMinutes*60;setTimeLeft(newSeconds);setInitialTime(newSeconds);setLastSetTime(newSeconds);}},[isRunning,isPaused,timeLeft]);const updateSettings=useCallback(time=>{const newSeconds=time*60;setTimeLeft(newSeconds);setInitialTime(newSeconds);setLastSetTime(newSeconds);},[]);return/*#__PURE__*/_jsx(TimerContext.Provider,{value:{timeLeft,isRunning,isPaused,initialTime,lastSetTime,toggleTimer,resetTimer,adjustTime,updateSettings,setTimeLeft,setInitialTime,setIsRunning,setLastSetTime,setIsPaused},children:children});};export const useTimer=()=>{const context=useContext(TimerContext);if(!context){throw new Error('useTimer must be used within a TimerProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","useEffect","useSettings","jsx","_jsx","TimerContext","TimerProvider","_ref","children","settings","timeLeft","setTimeLeft","defaultFocusTime","isRunning","setIsRunning","isPaused","setIsPaused","initialTime","setInitialTime","lastSetTime","setLastSetTime","lastUpdate","setLastUpdate","requestId","updateTimer","timestamp","requestAnimationFrame","deltaTime","prev","cancelAnimationFrame","toggleTimer","resetTimer","adjustTime","amount","newMinutes","Math","max","min","floor","newSeconds","updateSettings","time","Provider","value","useTimer","context","Error"],"sources":["C:/Users/ammar/Documents/app lockin/src/contexts/TimerContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback, useEffect } from 'react';\r\nimport { useSettings } from './SettingsContext';\r\n\r\ninterface TimerContextType {\r\n  timeLeft: number;\r\n  isRunning: boolean;\r\n  isPaused: boolean;\r\n  initialTime: number;\r\n  lastSetTime: number;\r\n  toggleTimer: () => void;\r\n  resetTimer: () => void;\r\n  adjustTime: (amount: number) => void;\r\n  updateSettings: (time: number) => void;\r\n  setTimeLeft: (time: number | ((prev: number) => number)) => void;\r\n  setInitialTime: (time: number) => void;\r\n  setIsRunning: (running: boolean) => void;\r\n  setLastSetTime: (time: number) => void;\r\n  setIsPaused: (paused: boolean) => void;\r\n}\r\n\r\nconst TimerContext = createContext<TimerContextType | null>(null);\r\n\r\nexport const TimerProvider: React.FC<{ children: React.ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const { settings } = useSettings();\r\n  const [timeLeft, setTimeLeft] = useState(settings.defaultFocusTime * 60);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [initialTime, setInitialTime] = useState(settings.defaultFocusTime * 60);\r\n  const [lastSetTime, setLastSetTime] = useState(settings.defaultFocusTime * 60);\r\n  const [lastUpdate, setLastUpdate] = useState<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    let requestId: number;\r\n\r\n    const updateTimer = (timestamp: number) => {\r\n      if (!lastUpdate) {\r\n        setLastUpdate(timestamp);\r\n        requestId = requestAnimationFrame(updateTimer);\r\n        return;\r\n      }\r\n\r\n      const deltaTime = timestamp - lastUpdate;\r\n      if (deltaTime >= 1000) { // Update every second\r\n        setTimeLeft(prev => {\r\n          if (prev <= 0) {\r\n            setIsRunning(false);\r\n            setIsPaused(false);\r\n            setLastUpdate(null);\r\n            return lastSetTime;\r\n          }\r\n          return prev - 1;\r\n        });\r\n        setLastUpdate(timestamp);\r\n      }\r\n\r\n      if (isRunning && !isPaused) {\r\n        requestId = requestAnimationFrame(updateTimer);\r\n      }\r\n    };\r\n\r\n    if (isRunning && !isPaused) {\r\n      requestId = requestAnimationFrame(updateTimer);\r\n    } else {\r\n      setLastUpdate(null);\r\n    }\r\n\r\n    return () => {\r\n      if (requestId) {\r\n        cancelAnimationFrame(requestId);\r\n      }\r\n    };\r\n  }, [isRunning, isPaused, lastSetTime]);\r\n\r\n  const toggleTimer = useCallback(() => {\r\n    if (!isRunning) {\r\n      setTimeLeft(lastSetTime);\r\n      setInitialTime(lastSetTime);\r\n      setIsRunning(true);\r\n      setIsPaused(false);\r\n    } else {\r\n      setIsRunning(false);\r\n      setIsPaused(false);\r\n      setTimeLeft(lastSetTime);\r\n      setInitialTime(lastSetTime);\r\n    }\r\n  }, [isRunning, lastSetTime]);\r\n\r\n  const resetTimer = useCallback(() => {\r\n    setTimeLeft(lastSetTime);\r\n    setInitialTime(lastSetTime);\r\n    setIsRunning(false);\r\n    setIsPaused(false);\r\n  }, [lastSetTime]);\r\n\r\n  const adjustTime = useCallback((amount: number) => {\r\n    if (!isRunning && !isPaused) {\r\n      const newMinutes = Math.max(1, Math.min(120, Math.floor(timeLeft / 60) + amount));\r\n      const newSeconds = newMinutes * 60;\r\n      setTimeLeft(newSeconds);\r\n      setInitialTime(newSeconds);\r\n      setLastSetTime(newSeconds);\r\n    }\r\n  }, [isRunning, isPaused, timeLeft]);\r\n\r\n  const updateSettings = useCallback((time: number) => {\r\n    const newSeconds = time * 60;\r\n    setTimeLeft(newSeconds);\r\n    setInitialTime(newSeconds);\r\n    setLastSetTime(newSeconds);\r\n  }, []);\r\n\r\n  return (\r\n    <TimerContext.Provider\r\n      value={{\r\n        timeLeft,\r\n        isRunning,\r\n        isPaused,\r\n        initialTime,\r\n        lastSetTime,\r\n        toggleTimer,\r\n        resetTimer,\r\n        adjustTime,\r\n        updateSettings,\r\n        setTimeLeft,\r\n        setInitialTime,\r\n        setIsRunning,\r\n        setLastSetTime,\r\n        setIsPaused\r\n      }}\r\n    >\r\n      {children}\r\n    </TimerContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTimer = () => {\r\n  const context = useContext(TimerContext);\r\n  if (!context) {\r\n    throw new Error('useTimer must be used within a TimerProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}