{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const defaultSettings={soundEnabled:true,defaultFocusTime:25};const SETTINGS_KEY='app-settings';const SettingsContext=/*#__PURE__*/createContext(null);export const useSettings=()=>{const context=useContext(SettingsContext);if(!context){throw new Error('useSettings must be used within a SettingsProvider');}return context;};export const SettingsProvider=_ref=>{let{children}=_ref;const[settings,setSettings]=useState(()=>{const savedSettings=localStorage.getItem(SETTINGS_KEY);if(savedSettings){const parsed=JSON.parse(savedSettings);// Zorg ervoor dat defaultFocusTime altijd een geldige waarde heeft\nreturn{...defaultSettings,...parsed,defaultFocusTime:parsed.defaultFocusTime||25};}return defaultSettings;});useEffect(()=>{localStorage.setItem(SETTINGS_KEY,JSON.stringify(settings));},[settings]);const updateSettings=newSettings=>{setSettings(prev=>({...prev,...newSettings}));};return/*#__PURE__*/_jsx(SettingsContext.Provider,{value:{settings,updateSettings},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","defaultSettings","soundEnabled","defaultFocusTime","SETTINGS_KEY","SettingsContext","useSettings","context","Error","SettingsProvider","_ref","children","settings","setSettings","savedSettings","localStorage","getItem","parsed","JSON","parse","setItem","stringify","updateSettings","newSettings","prev","Provider","value"],"sources":["C:/Users/ammar/Documents/app lockin/src/contexts/SettingsContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nexport interface Settings {\r\n  soundEnabled: boolean;\r\n  defaultFocusTime: number;\r\n}\r\n\r\ninterface SettingsContextType {\r\n  settings: Settings;\r\n  updateSettings: (newSettings: Partial<Settings>) => void;\r\n}\r\n\r\nconst defaultSettings: Settings = {\r\n  soundEnabled: true,\r\n  defaultFocusTime: 25\r\n};\r\n\r\nconst SETTINGS_KEY = 'app-settings';\r\n\r\nconst SettingsContext = createContext<SettingsContextType | null>(null);\r\n\r\nexport const useSettings = () => {\r\n  const context = useContext(SettingsContext);\r\n  if (!context) {\r\n    throw new Error('useSettings must be used within a SettingsProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SettingsProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [settings, setSettings] = useState<Settings>(() => {\r\n    const savedSettings = localStorage.getItem(SETTINGS_KEY);\r\n    if (savedSettings) {\r\n      const parsed = JSON.parse(savedSettings);\r\n      // Zorg ervoor dat defaultFocusTime altijd een geldige waarde heeft\r\n      return {\r\n        ...defaultSettings,\r\n        ...parsed,\r\n        defaultFocusTime: parsed.defaultFocusTime || 25\r\n      };\r\n    }\r\n    return defaultSettings;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings));\r\n  }, [settings]);\r\n\r\n  const updateSettings = (newSettings: Partial<Settings>) => {\r\n    setSettings(prev => ({\r\n      ...prev,\r\n      ...newSettings\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <SettingsContext.Provider value={{ settings, updateSettings }}>\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAY9E,KAAM,CAAAC,eAAyB,CAAG,CAChCC,YAAY,CAAE,IAAI,CAClBC,gBAAgB,CAAE,EACpB,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,cAAc,CAEnC,KAAM,CAAAC,eAAe,cAAGV,aAAa,CAA6B,IAAI,CAAC,CAEvE,MAAO,MAAM,CAAAW,WAAW,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,OAAO,CAAGX,UAAU,CAACS,eAAe,CAAC,CAC3C,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,oDAAoD,CAAC,CACvE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,gBAAyD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACpF,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGhB,QAAQ,CAAW,IAAM,CACvD,KAAM,CAAAiB,aAAa,CAAGC,YAAY,CAACC,OAAO,CAACZ,YAAY,CAAC,CACxD,GAAIU,aAAa,CAAE,CACjB,KAAM,CAAAG,MAAM,CAAGC,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC,CACxC;AACA,MAAO,CACL,GAAGb,eAAe,CAClB,GAAGgB,MAAM,CACTd,gBAAgB,CAAEc,MAAM,CAACd,gBAAgB,EAAI,EAC/C,CAAC,CACH,CACA,MAAO,CAAAF,eAAe,CACxB,CAAC,CAAC,CAEFH,SAAS,CAAC,IAAM,CACdiB,YAAY,CAACK,OAAO,CAAChB,YAAY,CAAEc,IAAI,CAACG,SAAS,CAACT,QAAQ,CAAC,CAAC,CAC9D,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAU,cAAc,CAAIC,WAA8B,EAAK,CACzDV,WAAW,CAACW,IAAI,GAAK,CACnB,GAAGA,IAAI,CACP,GAAGD,WACL,CAAC,CAAC,CAAC,CACL,CAAC,CAED,mBACEvB,IAAA,CAACK,eAAe,CAACoB,QAAQ,EAACC,KAAK,CAAE,CAAEd,QAAQ,CAAEU,cAAe,CAAE,CAAAX,QAAA,CAC3DA,QAAQ,CACe,CAAC,CAE/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}