{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ammar\\\\Documents\\\\app lockin\\\\src\\\\pages\\\\TimerPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './TimerPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MOTIVATION_TEXTS = [\"LOCK IN!\",\n// 100%\n\"STAY FOCUSED!\",\n// 90%\n\"KEEP PUSHING!\",\n// 80%\n\"YOU GOT THIS!\",\n// 70%\n\"STAY STRONG!\",\n// 60%\n\"HALFWAY THERE!\",\n// 50%\n\"KEEP GOING!\",\n// 40%\n\"DON'T GIVE UP!\",\n// 30%\n\"PUSH THROUGH!\",\n// 20%\n\"ALMOST THERE!\" // 10%\n];\nconst TimerPage = () => {\n  _s();\n  const [minutes, setMinutes] = useState(26);\n  const [seconds, setSeconds] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [motivationText, setMotivationText] = useState(MOTIVATION_TEXTS[0]);\n  const [progress, setProgress] = useState(0);\n  const intervalRef = useRef();\n  const initialTimeRef = useRef({\n    minutes: 26,\n    seconds: 0\n  });\n  const audioContextRef = useRef(null);\n  const oscillatorRef = useRef(null);\n  const gainNodeRef = useRef(null);\n  const startAlarm = () => {\n    try {\n      if (!audioContextRef.current) {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      }\n      const ctx = audioContextRef.current;\n\n      // Create main oscillator for bell sound\n      const mainOsc = ctx.createOscillator();\n      mainOsc.type = 'sine';\n      mainOsc.frequency.setValueAtTime(1800, ctx.currentTime); // Higher frequency for bell sound\n\n      // Create modulator oscillator for tring effect\n      const modOsc = ctx.createOscillator();\n      modOsc.type = 'sine';\n      modOsc.frequency.setValueAtTime(15, ctx.currentTime); // Slow modulation for ring effect\n\n      // Create gain nodes\n      const mainGain = ctx.createGain();\n      const modGain = ctx.createGain();\n\n      // Set initial gain values\n      mainGain.gain.setValueAtTime(0.3, ctx.currentTime);\n      modGain.gain.setValueAtTime(0.1, ctx.currentTime);\n\n      // Connect modulation\n      modOsc.connect(modGain);\n      modGain.connect(mainOsc.frequency);\n\n      // Connect main sound to output\n      mainOsc.connect(mainGain);\n      mainGain.connect(ctx.destination);\n\n      // Create repeating envelope for tring tring effect\n      setInterval(() => {\n        const now = ctx.currentTime;\n        mainGain.gain.setValueAtTime(0.3, now);\n        mainGain.gain.exponentialRampToValueAtTime(0.1, now + 0.1);\n      }, 200); // Repeat every 200ms for tring tring effect\n\n      // Start oscillators\n      mainOsc.start();\n      modOsc.start();\n\n      // Store references\n      oscillatorRef.current = mainOsc;\n      gainNodeRef.current = mainGain;\n    } catch (error) {\n      console.error('Error starting alarm:', error);\n    }\n  };\n  const stopAlarm = () => {\n    try {\n      if (oscillatorRef.current) {\n        oscillatorRef.current.stop();\n        oscillatorRef.current.disconnect();\n        oscillatorRef.current = null;\n      }\n      if (gainNodeRef.current) {\n        gainNodeRef.current.disconnect();\n        gainNodeRef.current = null;\n      }\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n        audioContextRef.current = null;\n      }\n    } catch (error) {\n      console.error('Error stopping alarm:', error);\n    }\n  };\n  useEffect(() => {\n    if (isRunning && !isPaused) {\n      intervalRef.current = window.setInterval(() => {\n        setSeconds(prevSeconds => {\n          let newSeconds = prevSeconds;\n          let newMinutes = minutes;\n          if (prevSeconds === 0) {\n            if (minutes === 0) {\n              setIsRunning(false);\n              setIsPaused(false);\n              setMotivationText(\"TIME'S UP!\");\n              setProgress(100);\n              setIsCompleted(true);\n              startAlarm(); // Start the alarm when timer completes\n              return 0;\n            }\n            newSeconds = 59;\n            newMinutes = minutes - 1;\n            setMinutes(newMinutes);\n          } else {\n            newSeconds = prevSeconds - 1;\n          }\n          const currentTotalSeconds = newMinutes * 60 + newSeconds;\n          const initialTotalSeconds = initialTimeRef.current.minutes * 60 + initialTimeRef.current.seconds;\n          const percentageRemaining = currentTotalSeconds / initialTotalSeconds * 100;\n          setProgress(100 - percentageRemaining);\n          const textIndex = Math.floor((100 - percentageRemaining) / 10);\n          setMotivationText(MOTIVATION_TEXTS[Math.min(textIndex, 9)]);\n          return newSeconds;\n        });\n      }, 1000);\n    }\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, isPaused, minutes]);\n\n  // Cleanup audio context when component unmounts\n  useEffect(() => {\n    return () => {\n      stopAlarm();\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n    };\n  }, []);\n  const startTimer = () => {\n    setIsRunning(true);\n    setIsPaused(false);\n    setIsCompleted(false);\n    initialTimeRef.current = {\n      minutes,\n      seconds\n    };\n    setProgress(0);\n    setMotivationText(MOTIVATION_TEXTS[0]);\n  };\n  const stopTimer = () => {\n    setIsRunning(false);\n    setIsPaused(false);\n    setIsCompleted(false);\n    setMinutes(initialTimeRef.current.minutes);\n    setSeconds(initialTimeRef.current.seconds);\n    setProgress(0);\n    setMotivationText(MOTIVATION_TEXTS[0]);\n  };\n  const pauseTimer = () => {\n    setIsPaused(true);\n  };\n  const resumeTimer = () => {\n    setIsPaused(false);\n  };\n  const handleDone = () => {\n    stopAlarm(); // Stop the alarm when Done is clicked\n    setIsCompleted(false);\n    setMinutes(initialTimeRef.current.minutes);\n    setSeconds(initialTimeRef.current.seconds);\n    setProgress(0);\n    setMotivationText(MOTIVATION_TEXTS[0]);\n  };\n  const adjustDigit = (type, position, increment) => {\n    if (isRunning) return;\n    const setValue = type === 'minutes' ? setMinutes : setSeconds;\n    const currentValue = type === 'minutes' ? minutes : seconds;\n    const max = type === 'minutes' ? 99 : 59;\n    let newValue = currentValue;\n    const incrementValue = position === 'tens' ? 10 : 1;\n    if (increment) {\n      newValue += incrementValue;\n      if (newValue > max) newValue = 0;\n    } else {\n      newValue -= incrementValue;\n      if (newValue < 0) newValue = max;\n    }\n    setValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"motivation-text\",\n      children: motivationText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `timer-circle ${isCompleted ? 'shake' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"progress-ring\",\n        viewBox: \"0 0 100 100\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"progress-ring-circle-bg\",\n          cx: \"50\",\n          cy: \"50\",\n          r: \"47\",\n          strokeWidth: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"progress-ring-circle\",\n          cx: \"50\",\n          cy: \"50\",\n          r: \"47\",\n          strokeWidth: \"3\",\n          style: {\n            strokeDasharray: `${2 * Math.PI * 47}`,\n            strokeDashoffset: `${2 * Math.PI * 47 * (1 - progress / 100)}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"digit-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"digit-button top\",\n              onClick: () => adjustDigit('minutes', 'tens', true),\n              disabled: isRunning,\n              children: \"\\u25B2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"digit\",\n              children: Math.floor(minutes / 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"digit-button bottom\",\n              onClick: () => adjustDigit('minutes', 'tens', false),\n              disabled: isRunning,\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"digit-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"digit-button top\",\n              onClick: () => adjustDigit('minutes', 'ones', true),\n              disabled: isRunning,\n              children: \"\\u25B2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"digit\",\n              children: minutes % 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"digit-button bottom\",\n              onClick: () => adjustDigit('minutes', 'ones', false),\n              disabled: isRunning,\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"separator\",\n          children: \":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"digit-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"digit-button top\",\n              onClick: () => adjustDigit('seconds', 'tens', true),\n              disabled: isRunning,\n              children: \"\\u25B2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"digit\",\n              children: Math.floor(seconds / 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"digit-button bottom\",\n              onClick: () => adjustDigit('seconds', 'tens', false),\n              disabled: isRunning,\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"digit-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"digit-button top\",\n              onClick: () => adjustDigit('seconds', 'ones', true),\n              disabled: isRunning,\n              children: \"\\u25B2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"digit\",\n              children: seconds % 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"digit-button bottom\",\n              onClick: () => adjustDigit('seconds', 'ones', false),\n              disabled: isRunning,\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: isCompleted ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button done\",\n        onClick: handleDone,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this) : !isRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button start\",\n        onClick: startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button stop\",\n          onClick: stopTimer,\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), !isPaused ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button pause\",\n          onClick: pauseTimer,\n          children: \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button resume\",\n          onClick: resumeTimer,\n          children: \"Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(TimerPage, \"BGx3+GwcePNI2HYwdclgH5sTo+Q=\");\n_c = TimerPage;\nexport default TimerPage;\nvar _c;\n$RefreshReg$(_c, \"TimerPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","MOTIVATION_TEXTS","TimerPage","_s","minutes","setMinutes","seconds","setSeconds","isRunning","setIsRunning","isPaused","setIsPaused","isCompleted","setIsCompleted","motivationText","setMotivationText","progress","setProgress","intervalRef","initialTimeRef","audioContextRef","oscillatorRef","gainNodeRef","startAlarm","current","window","AudioContext","webkitAudioContext","ctx","mainOsc","createOscillator","type","frequency","setValueAtTime","currentTime","modOsc","mainGain","createGain","modGain","gain","connect","destination","setInterval","now","exponentialRampToValueAtTime","start","error","console","stopAlarm","stop","disconnect","close","prevSeconds","newSeconds","newMinutes","currentTotalSeconds","initialTotalSeconds","percentageRemaining","textIndex","Math","floor","min","clearInterval","startTimer","stopTimer","pauseTimer","resumeTimer","handleDone","adjustDigit","position","increment","setValue","currentValue","max","newValue","incrementValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","cx","cy","r","strokeWidth","style","strokeDasharray","PI","strokeDashoffset","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ammar/Documents/app lockin/src/pages/TimerPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './TimerPage.css';\n\nconst MOTIVATION_TEXTS = [\n  \"LOCK IN!\", // 100%\n  \"STAY FOCUSED!\", // 90%\n  \"KEEP PUSHING!\", // 80%\n  \"YOU GOT THIS!\", // 70%\n  \"STAY STRONG!\", // 60%\n  \"HALFWAY THERE!\", // 50%\n  \"KEEP GOING!\", // 40%\n  \"DON'T GIVE UP!\", // 30%\n  \"PUSH THROUGH!\", // 20%\n  \"ALMOST THERE!\" // 10%\n];\n\nconst TimerPage: React.FC = () => {\n  const [minutes, setMinutes] = useState(26);\n  const [seconds, setSeconds] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [motivationText, setMotivationText] = useState(MOTIVATION_TEXTS[0]);\n  const [progress, setProgress] = useState(0);\n  \n  const intervalRef = useRef<number>();\n  const initialTimeRef = useRef({ minutes: 26, seconds: 0 });\n  const audioContextRef = useRef<AudioContext | null>(null);\n  const oscillatorRef = useRef<OscillatorNode | null>(null);\n  const gainNodeRef = useRef<GainNode | null>(null);\n\n  const startAlarm = () => {\n    try {\n      if (!audioContextRef.current) {\n        audioContextRef.current = new (window.AudioContext || (window as any).webkitAudioContext)();\n      }\n\n      const ctx = audioContextRef.current;\n      \n      // Create main oscillator for bell sound\n      const mainOsc = ctx.createOscillator();\n      mainOsc.type = 'sine';\n      mainOsc.frequency.setValueAtTime(1800, ctx.currentTime); // Higher frequency for bell sound\n\n      // Create modulator oscillator for tring effect\n      const modOsc = ctx.createOscillator();\n      modOsc.type = 'sine';\n      modOsc.frequency.setValueAtTime(15, ctx.currentTime); // Slow modulation for ring effect\n\n      // Create gain nodes\n      const mainGain = ctx.createGain();\n      const modGain = ctx.createGain();\n\n      // Set initial gain values\n      mainGain.gain.setValueAtTime(0.3, ctx.currentTime);\n      modGain.gain.setValueAtTime(0.1, ctx.currentTime);\n\n      // Connect modulation\n      modOsc.connect(modGain);\n      modGain.connect(mainOsc.frequency);\n\n      // Connect main sound to output\n      mainOsc.connect(mainGain);\n      mainGain.connect(ctx.destination);\n\n      // Create repeating envelope for tring tring effect\n      setInterval(() => {\n        const now = ctx.currentTime;\n        mainGain.gain.setValueAtTime(0.3, now);\n        mainGain.gain.exponentialRampToValueAtTime(0.1, now + 0.1);\n      }, 200); // Repeat every 200ms for tring tring effect\n\n      // Start oscillators\n      mainOsc.start();\n      modOsc.start();\n\n      // Store references\n      oscillatorRef.current = mainOsc;\n      gainNodeRef.current = mainGain;\n    } catch (error) {\n      console.error('Error starting alarm:', error);\n    }\n  };\n\n  const stopAlarm = () => {\n    try {\n      if (oscillatorRef.current) {\n        oscillatorRef.current.stop();\n        oscillatorRef.current.disconnect();\n        oscillatorRef.current = null;\n      }\n      if (gainNodeRef.current) {\n        gainNodeRef.current.disconnect();\n        gainNodeRef.current = null;\n      }\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n        audioContextRef.current = null;\n      }\n    } catch (error) {\n      console.error('Error stopping alarm:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (isRunning && !isPaused) {\n      intervalRef.current = window.setInterval(() => {\n        setSeconds(prevSeconds => {\n          let newSeconds = prevSeconds;\n          let newMinutes = minutes;\n\n          if (prevSeconds === 0) {\n            if (minutes === 0) {\n              setIsRunning(false);\n              setIsPaused(false);\n              setMotivationText(\"TIME'S UP!\");\n              setProgress(100);\n              setIsCompleted(true);\n              startAlarm(); // Start the alarm when timer completes\n              return 0;\n            }\n            newSeconds = 59;\n            newMinutes = minutes - 1;\n            setMinutes(newMinutes);\n          } else {\n            newSeconds = prevSeconds - 1;\n          }\n\n          const currentTotalSeconds = (newMinutes * 60) + newSeconds;\n          const initialTotalSeconds = (initialTimeRef.current.minutes * 60) + initialTimeRef.current.seconds;\n          const percentageRemaining = (currentTotalSeconds / initialTotalSeconds) * 100;\n          setProgress(100 - percentageRemaining);\n          const textIndex = Math.floor((100 - percentageRemaining) / 10);\n          setMotivationText(MOTIVATION_TEXTS[Math.min(textIndex, 9)]);\n\n          return newSeconds;\n        });\n      }, 1000);\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, isPaused, minutes]);\n\n  // Cleanup audio context when component unmounts\n  useEffect(() => {\n    return () => {\n      stopAlarm();\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n    };\n  }, []);\n\n  const startTimer = () => {\n    setIsRunning(true);\n    setIsPaused(false);\n    setIsCompleted(false);\n    initialTimeRef.current = { minutes, seconds };\n    setProgress(0);\n    setMotivationText(MOTIVATION_TEXTS[0]);\n  };\n\n  const stopTimer = () => {\n    setIsRunning(false);\n    setIsPaused(false);\n    setIsCompleted(false);\n    setMinutes(initialTimeRef.current.minutes);\n    setSeconds(initialTimeRef.current.seconds);\n    setProgress(0);\n    setMotivationText(MOTIVATION_TEXTS[0]);\n  };\n\n  const pauseTimer = () => {\n    setIsPaused(true);\n  };\n\n  const resumeTimer = () => {\n    setIsPaused(false);\n  };\n\n  const handleDone = () => {\n    stopAlarm(); // Stop the alarm when Done is clicked\n    setIsCompleted(false);\n    setMinutes(initialTimeRef.current.minutes);\n    setSeconds(initialTimeRef.current.seconds);\n    setProgress(0);\n    setMotivationText(MOTIVATION_TEXTS[0]);\n  };\n\n  const adjustDigit = (type: 'minutes' | 'seconds', position: 'tens' | 'ones', increment: boolean) => {\n    if (isRunning) return;\n\n    const setValue = type === 'minutes' ? setMinutes : setSeconds;\n    const currentValue = type === 'minutes' ? minutes : seconds;\n    const max = type === 'minutes' ? 99 : 59;\n\n    let newValue = currentValue;\n    const incrementValue = position === 'tens' ? 10 : 1;\n\n    if (increment) {\n      newValue += incrementValue;\n      if (newValue > max) newValue = 0;\n    } else {\n      newValue -= incrementValue;\n      if (newValue < 0) newValue = max;\n    }\n\n    setValue(newValue);\n  };\n\n  return (\n    <div className=\"timer-container\">\n      <div className=\"motivation-text\">{motivationText}</div>\n      <div className={`timer-circle ${isCompleted ? 'shake' : ''}`}>\n        <svg className=\"progress-ring\" viewBox=\"0 0 100 100\">\n          <circle\n            className=\"progress-ring-circle-bg\"\n            cx=\"50\"\n            cy=\"50\"\n            r=\"47\"\n            strokeWidth=\"3\"\n          />\n          <circle\n            className=\"progress-ring-circle\"\n            cx=\"50\"\n            cy=\"50\"\n            r=\"47\"\n            strokeWidth=\"3\"\n            style={{\n              strokeDasharray: `${2 * Math.PI * 47}`,\n              strokeDashoffset: `${2 * Math.PI * 47 * (1 - progress / 100)}`\n            }}\n          />\n        </svg>\n        <div className=\"timer-display\">\n          <div className=\"time-group\">\n            <div className=\"digit-group\">\n              <button\n                className=\"digit-button top\"\n                onClick={() => adjustDigit('minutes', 'tens', true)}\n                disabled={isRunning}\n              >\n                ▲\n              </button>\n              <div className=\"digit\">{Math.floor(minutes / 10)}</div>\n              <button\n                className=\"digit-button bottom\"\n                onClick={() => adjustDigit('minutes', 'tens', false)}\n                disabled={isRunning}\n              >\n                ▼\n              </button>\n            </div>\n            <div className=\"digit-group\">\n              <button\n                className=\"digit-button top\"\n                onClick={() => adjustDigit('minutes', 'ones', true)}\n                disabled={isRunning}\n              >\n                ▲\n              </button>\n              <div className=\"digit\">{minutes % 10}</div>\n              <button\n                className=\"digit-button bottom\"\n                onClick={() => adjustDigit('minutes', 'ones', false)}\n                disabled={isRunning}\n              >\n                ▼\n              </button>\n            </div>\n          </div>\n          <div className=\"separator\">:</div>\n          <div className=\"time-group\">\n            <div className=\"digit-group\">\n              <button\n                className=\"digit-button top\"\n                onClick={() => adjustDigit('seconds', 'tens', true)}\n                disabled={isRunning}\n              >\n                ▲\n              </button>\n              <div className=\"digit\">{Math.floor(seconds / 10)}</div>\n              <button\n                className=\"digit-button bottom\"\n                onClick={() => adjustDigit('seconds', 'tens', false)}\n                disabled={isRunning}\n              >\n                ▼\n              </button>\n            </div>\n            <div className=\"digit-group\">\n              <button\n                className=\"digit-button top\"\n                onClick={() => adjustDigit('seconds', 'ones', true)}\n                disabled={isRunning}\n              >\n                ▲\n              </button>\n              <div className=\"digit\">{seconds % 10}</div>\n              <button\n                className=\"digit-button bottom\"\n                onClick={() => adjustDigit('seconds', 'ones', false)}\n                disabled={isRunning}\n              >\n                ▼\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"controls\">\n        {isCompleted ? (\n          <button className=\"control-button done\" onClick={handleDone}>\n            Done\n          </button>\n        ) : !isRunning ? (\n          <button className=\"control-button start\" onClick={startTimer}>\n            Start\n          </button>\n        ) : (\n          <>\n            <button className=\"control-button stop\" onClick={stopTimer}>\n              Stop\n            </button>\n            {!isPaused ? (\n              <button className=\"control-button pause\" onClick={pauseTimer}>\n                Pause\n              </button>\n            ) : (\n              <button className=\"control-button resume\" onClick={resumeTimer}>\n                Resume\n              </button>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TimerPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}