{"ast":null,"code":"import React,{createContext,useState,useContext,useCallback,useEffect}from'react';import{useSettings}from'./SettingsContext';import{jsx as _jsx}from\"react/jsx-runtime\";const TimerContext=createContext(null);export const TimerProvider=({children})=>{const{settings}=useSettings();const[timeLeft,setTimeLeft]=useState(settings.defaultFocusTime*60);const[isRunning,setIsRunning]=useState(false);const[isPaused,setIsPaused]=useState(false);const[initialTime,setInitialTime]=useState(settings.defaultFocusTime*60);const[lastSetTime,setLastSetTime]=useState(settings.defaultFocusTime*60);const[lastUpdate,setLastUpdate]=useState(null);useEffect(()=>{let requestId;const updateTimer=timestamp=>{if(!lastUpdate){setLastUpdate(timestamp);requestId=requestAnimationFrame(updateTimer);return;}const deltaTime=timestamp-lastUpdate;if(deltaTime>=1000){setTimeLeft(prev=>{if(prev<=0){setIsRunning(false);setIsPaused(false);setLastUpdate(null);return lastSetTime;}return prev-1;});setLastUpdate(timestamp);}if(isRunning&&!isPaused){requestId=requestAnimationFrame(updateTimer);}};if(isRunning&&!isPaused){requestId=requestAnimationFrame(updateTimer);}else{setLastUpdate(null);}return()=>{if(requestId){cancelAnimationFrame(requestId);}};},[isRunning,isPaused,lastSetTime]);const toggleTimer=useCallback(()=>{if(!isRunning){setTimeLeft(lastSetTime);setInitialTime(lastSetTime);setIsRunning(true);setIsPaused(false);}else{setIsRunning(false);setIsPaused(false);setTimeLeft(lastSetTime);setInitialTime(lastSetTime);}},[isRunning,lastSetTime]);const resetTimer=useCallback(()=>{setTimeLeft(lastSetTime);setInitialTime(lastSetTime);setIsRunning(false);setIsPaused(false);},[lastSetTime]);const adjustTime=useCallback(amount=>{if(!isRunning&&!isPaused){const newMinutes=Math.max(1,Math.min(120,Math.floor(timeLeft/60)+amount));const newSeconds=newMinutes*60;setTimeLeft(newSeconds);setInitialTime(newSeconds);setLastSetTime(newSeconds);}},[isRunning,isPaused,timeLeft]);const updateSettings=useCallback(time=>{const newSeconds=time*60;setTimeLeft(newSeconds);setInitialTime(newSeconds);setLastSetTime(newSeconds);},[]);return _jsx(TimerContext.Provider,{value:{timeLeft,isRunning,isPaused,initialTime,lastSetTime,toggleTimer,resetTimer,adjustTime,updateSettings,setTimeLeft,setInitialTime,setIsRunning,setLastSetTime,setIsPaused},children:children});};export const useTimer=()=>{const context=useContext(TimerContext);if(!context){throw new Error('useTimer must be used within a TimerProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","useEffect","useSettings","jsx","_jsx","TimerContext","TimerProvider","children","settings","timeLeft","setTimeLeft","defaultFocusTime","isRunning","setIsRunning","isPaused","setIsPaused","initialTime","setInitialTime","lastSetTime","setLastSetTime","lastUpdate","setLastUpdate","requestId","updateTimer","timestamp","requestAnimationFrame","deltaTime","prev","cancelAnimationFrame","toggleTimer","resetTimer","adjustTime","amount","newMinutes","Math","max","min","floor","newSeconds","updateSettings","time","Provider","value","useTimer","context","Error"],"sources":["C:/Users/ammar/Documents/app lockin/src/contexts/TimerContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback, useEffect } from 'react';\nimport { useSettings } from './SettingsContext';\n\ninterface TimerContextType {\n  timeLeft: number;\n  isRunning: boolean;\n  isPaused: boolean;\n  initialTime: number;\n  lastSetTime: number;\n  toggleTimer: () => void;\n  resetTimer: () => void;\n  adjustTime: (amount: number) => void;\n  updateSettings: (time: number) => void;\n  setTimeLeft: (time: number | ((prev: number) => number)) => void;\n  setInitialTime: (time: number) => void;\n  setIsRunning: (running: boolean) => void;\n  setLastSetTime: (time: number) => void;\n  setIsPaused: (paused: boolean) => void;\n}\n\nconst TimerContext = createContext<TimerContextType | null>(null);\n\nexport const TimerProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const { settings } = useSettings();\n  const [timeLeft, setTimeLeft] = useState(settings.defaultFocusTime * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [initialTime, setInitialTime] = useState(settings.defaultFocusTime * 60);\n  const [lastSetTime, setLastSetTime] = useState(settings.defaultFocusTime * 60);\n  const [lastUpdate, setLastUpdate] = useState<number | null>(null);\n\n  useEffect(() => {\n    let requestId: number;\n\n    const updateTimer = (timestamp: number) => {\n      if (!lastUpdate) {\n        setLastUpdate(timestamp);\n        requestId = requestAnimationFrame(updateTimer);\n        return;\n      }\n\n      const deltaTime = timestamp - lastUpdate;\n      if (deltaTime >= 1000) { // Update every second\n        setTimeLeft(prev => {\n          if (prev <= 0) {\n            setIsRunning(false);\n            setIsPaused(false);\n            setLastUpdate(null);\n            return lastSetTime;\n          }\n          return prev - 1;\n        });\n        setLastUpdate(timestamp);\n      }\n\n      if (isRunning && !isPaused) {\n        requestId = requestAnimationFrame(updateTimer);\n      }\n    };\n\n    if (isRunning && !isPaused) {\n      requestId = requestAnimationFrame(updateTimer);\n    } else {\n      setLastUpdate(null);\n    }\n\n    return () => {\n      if (requestId) {\n        cancelAnimationFrame(requestId);\n      }\n    };\n  }, [isRunning, isPaused, lastSetTime]);\n\n  const toggleTimer = useCallback(() => {\n    if (!isRunning) {\n      setTimeLeft(lastSetTime);\n      setInitialTime(lastSetTime);\n      setIsRunning(true);\n      setIsPaused(false);\n    } else {\n      setIsRunning(false);\n      setIsPaused(false);\n      setTimeLeft(lastSetTime);\n      setInitialTime(lastSetTime);\n    }\n  }, [isRunning, lastSetTime]);\n\n  const resetTimer = useCallback(() => {\n    setTimeLeft(lastSetTime);\n    setInitialTime(lastSetTime);\n    setIsRunning(false);\n    setIsPaused(false);\n  }, [lastSetTime]);\n\n  const adjustTime = useCallback((amount: number) => {\n    if (!isRunning && !isPaused) {\n      const newMinutes = Math.max(1, Math.min(120, Math.floor(timeLeft / 60) + amount));\n      const newSeconds = newMinutes * 60;\n      setTimeLeft(newSeconds);\n      setInitialTime(newSeconds);\n      setLastSetTime(newSeconds);\n    }\n  }, [isRunning, isPaused, timeLeft]);\n\n  const updateSettings = useCallback((time: number) => {\n    const newSeconds = time * 60;\n    setTimeLeft(newSeconds);\n    setInitialTime(newSeconds);\n    setLastSetTime(newSeconds);\n  }, []);\n\n  return (\n    <TimerContext.Provider\n      value={{\n        timeLeft,\n        isRunning,\n        isPaused,\n        initialTime,\n        lastSetTime,\n        toggleTimer,\n        resetTimer,\n        adjustTime,\n        updateSettings,\n        setTimeLeft,\n        setInitialTime,\n        setIsRunning,\n        setLastSetTime,\n        setIsPaused\n      }}\n    >\n      {children}\n    </TimerContext.Provider>\n  );\n};\n\nexport const useTimer = () => {\n  const context = useContext(TimerContext);\n  if (!context) {\n    throw new Error('useTimer must be used within a TimerProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}